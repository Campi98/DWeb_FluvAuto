@{
    ViewData["Title"] = "Página de Utilizador";
    var datasMarcacoes = (List<string>)ViewBag.DatasMarcacoes ?? new List<string>();
    var horasMarcacoes = (List<string>)ViewBag.HorasMarcacoes ?? new List<string>();
    var idsMarcacoes = (List<int>)ViewBag.IdsMarcacoes ?? new List<int>();
    var hoje = DateTime.Now.ToString("yyyy-MM-dd");
    var proximas = datasMarcacoes
    .Select((data, idx) => new
    {
        Data = data,
        Hora = horasMarcacoes.Count > idx ? horasMarcacoes[idx] : null,
        Id =
    idsMarcacoes.Count > idx ? idsMarcacoes[idx] : 0
    })
    .Where(x => string.Compare(x.Data, hoje) >= 0)
    .OrderBy(x => x.Data)
    .ToList();
}
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.css" rel="stylesheet" />
<style>
    /* Remove o azul do dia selecionado */
    .fc-daygrid-day.fc-day-today {
        background: #b3d4fc !important;
        /* mantém o highlight amarelo/azul claro para hoje */
    }

    .fc-daygrid-day.fc-day-today .fc-daygrid-day-number {
        font-weight: bold;
    }

    .fc-daygrid-day.fc-day-selected,
    .fc-daygrid-day.fc-daygrid-day-selected {
        background: transparent !important;
    }

    .fc-daygrid-day.user-marcacao-past {
        background: #ffe0b2 !important;
    }

    .fc-daygrid-day.user-marcacao-future {
        background: #ffb74d !important;
    }

    .calendar-container {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        gap: 40px;
        flex-wrap: wrap;
    }

    .proximas-marcacoes {
        min-width: 200px;
        background: #fffbe6;
        border-radius: 8px;
        padding: 16px 20px;
        box-shadow: 0 2px 8px #0001;
        margin-top: 30px;
        height: fit-content;
    }

    .proximas-marcacoes h3 {
        font-size: 1.2rem;
        margin-bottom: 10px;
    }

    .proximas-marcacoes ul {
        padding-left: 18px;
        margin: 0;
    }

    .proximas-marcacoes .btn-nova-marcacao {
        background: #ffb74d;
        color: #ffffff;
        border: none;
        font-weight: bold;
        width: 100%;
        margin-bottom: 1rem;
        transition: background 0.2s;
    }

    .proximas-marcacoes .btn-nova-marcacao:hover {
        background: #ffa726;
        color: #fff;
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js"></script>
<div class="text-center text-black">
    <h1>@ViewData["Title"]</h1>
    <div class="calendar-container">
        <div>
            <div id="calendar" style="max-width: 600px; margin: 30px auto;"></div>
        </div>
        <div class="proximas-marcacoes">
            <a href="@Url.Action("Create", "Marcacoes")" class="btn btn-nova-marcacao">Nova Marcação</a>
            <h3>Próximas Marcações</h3>
            @if (proximas.Any())
            {
                <ul>
                    @foreach (var item in proximas)
                    {
                        <li>
                            @DateTime.Parse(item.Data).ToString("dd/MM/yyyy")
                            @if (!string.IsNullOrEmpty(item.Hora))
                            {
                                <span style="color:#888">@item.Hora</span>
                            }
                            <a href="@Url.Action("Details", "Marcacoes", new { id = item.Id })"
                                class="btn btn-sm btn-outline-primary ms-2">Detalhes</a>
                        </li>
                    }
                </ul>
            }
            else
            {
                <span>Sem marcações futuras.</span>
            }
        </div>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');
        var today = new Date();
        var yyyy = today.getFullYear();
        var mm = String(today.getMonth() + 1).padStart(2, '0');
        var dd = String(today.getDate()).padStart(2, '0');
        var todayStr = yyyy + '-' + mm + '-' + dd;
        var marcacoes = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(datasMarcacoes));
        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            locale: 'pt',
            initialDate: todayStr,
            headerToolbar: {
                left: 'prev',
                center: 'title',
                right: 'next'
            },
            selectable: false,
            editable: false,
            showNonCurrentDates: true,
            dayMaxEventRows: true,
            height: 'auto',
            fixedWeekCount: false,
            dayCellDidMount: function (info) {
                // Obter a data do dia no formato yyyy-MM-dd sem timezone
                var cellDate = info.date.getFullYear() + '-' + String(info.date.getMonth() + 1).padStart(2, '0') + '-' + String(info.date.getDate()).padStart(2, '0');
                // Highlight marcações do user
                if (marcacoes.includes(cellDate)) {
                    if (cellDate < todayStr) {
                        info.el.classList.add('user-marcacao-past');
                    } else {
                        info.el.classList.add('user-marcacao-future');
                    }
                }
                // Highlight no current day
                if (cellDate === todayStr) {
                    info.el.style.backgroundColor = '#b3d4fc';
                }
            }
        });
        calendar.render();
    });
</script>

