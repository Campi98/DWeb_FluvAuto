@model IEnumerable<FluvAuto.Models.FuncionariosMarcacoes>

@{
    ViewData["Title"] = "Index";
    var isAdminOrFuncionario = User.IsInRole("admin") || User.IsInRole("funcionario");
}

<h1>Serviços</h1>

@if (isAdminOrFuncionario)
{
    <form method="get" id="filterForm" class="mb-3">
        <div class="row g-2">
            <div class="col-md-2">
                <label class="form-label small">Cliente</label>
                <select name="nomeCliente" class="form-select form-select-sm filter-dropdown">
                    <option value="">Todos</option>
                    @if (ViewBag.NomesClientes != null)
                    {
                        @foreach (var nome in ViewBag.NomesClientes)
                        {
                            <option value="@nome" selected="@(Context.Request.Query["nomeCliente"].ToString() == nome ? "selected" : null)">@nome</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label small">Telefone (cliente)</label>
                <input type="text" name="telefone" id="telefoneInput" class="form-control form-control-sm filter-input" 
                       placeholder="Digite o telefone..." 
                       value="@Context.Request.Query["telefone"]" />
            </div>
            <div class="col-md-2">
                <label class="form-label small">Matrícula</label>
                <input type="text" name="matricula" id="matriculaInput" class="form-control form-control-sm filter-input" 
                       placeholder="00-00-00" 
                       value="@Context.Request.Query["matricula"]" 
                       maxlength="8" />
            </div>
            <div class="col-md-2">
                <label class="form-label small">Funcionário</label>
                <select name="nomeFuncionario" class="form-select form-select-sm filter-dropdown">
                    <option value="">Todos</option>
                    @if (ViewBag.NomesFuncionarios != null)
                    {
                        @foreach (var nome in ViewBag.NomesFuncionarios)
                        {
                            <option value="@nome" selected="@(Context.Request.Query["nomeFuncionario"].ToString() == nome ? "selected" : null)">@nome</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label small">Serviço</label>
                <select name="servico" class="form-select form-select-sm filter-dropdown">
                    <option value="">Todos</option>
                    @if (ViewBag.Servicos != null)
                    {
                        @foreach (var servico in ViewBag.Servicos)
                        {
                            <option value="@servico" selected="@(Context.Request.Query["servico"].ToString() == servico ? "selected" : null)">@servico</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button type="button" onclick="clearFilters()" class="btn btn-outline-secondary btn-sm w-100">Limpar</button>
            </div>
        </div>
    </form>
    <p>
        <a asp-action="Create">Criar serviço</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.HorasGastas)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comentarios)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DataInicioServico)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Marcacao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Funcionario)
            </th>
            <th>
                Viatura
            </th>
            @if (isAdminOrFuncionario)
            {
                <th>Cliente</th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.HorasGastas)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comentarios)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataInicioServico)
                </td>
                <td>
                    @(item.Marcacao?.Servico ?? "-")
                </td>
                <td>
                    @(item.Funcionario?.Nome ?? "-")
                </td>
                <td>
                    @(item.Marcacao?.Viatura != null ? ($"{item.Marcacao.Viatura.Marca} - {item.Marcacao.Viatura.Modelo}") : "-")<br />
                    <span>@(item.Marcacao?.Viatura?.Matricula ?? "")</span>
                </td>
                @if (isAdminOrFuncionario)
                {
                    <td>
                        @Html.Raw((item.Marcacao?.Viatura?.Cliente?.Nome ?? "-") + "<br />" + (item.Marcacao?.Viatura?.Cliente?.Telefone ?? "-"))
                    </td>
                }
                <td>
                    @if (isAdminOrFuncionario)
                    {
                        @Html.ActionLink("Editar", "Edit", new { marcacaoId = item.MarcacaoFK, funcionarioId = item.FuncionarioFK })
                        @: |
                    }
                    @Html.ActionLink("Detalhes", "Details", new { marcacaoId = item.MarcacaoFK, funcionarioId = item.FuncionarioFK })
                    @if (isAdminOrFuncionario)
                    {
                        @: |
                        @Html.ActionLink("Apagar", "Delete", new { marcacaoId = item.MarcacaoFK, funcionarioId = item.FuncionarioFK })
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Auto-submit form quando qualquer dropdown mudar
        const dropdowns = document.querySelectorAll('.filter-dropdown');
        dropdowns.forEach(function(dropdown) {
            dropdown.addEventListener('change', function() {
                document.getElementById('filterForm').submit();
            });
        });
        
        // Tratamento especial para telefone - submeter apenas com 9 dígitos
        const telefoneInput = document.getElementById('telefoneInput');
        if (telefoneInput) {
            telefoneInput.addEventListener('input', function(e) {
                // Remove tudo exceto números
                let numericValue = e.target.value.replace(/[^0-9]/g, '');
                
                // Limita a 9 dígitos
                if (numericValue.length > 9) {
                    numericValue = numericValue.substring(0, 9);
                }
                
                // Atualiza o valor do campo
                e.target.value = numericValue;
                
                // Submete quando tiver 9 dígitos ou estiver vazio
                if (numericValue.length === 9 || numericValue.length === 0) {
                    document.getElementById('filterForm').submit();
                }
            });
        }
        
        // Formatação automática da matrícula e submissão com 6 caracteres
        const matriculaInput = document.getElementById('matriculaInput');
        if (matriculaInput) {
            matriculaInput.addEventListener('input', function(e) {
                let value = e.target.value.replace(/[^0-9A-Za-z]/g, '').toUpperCase(); // Remove tudo exceto números e letras
                
                // Limita a 6 caracteres
                if (value.length > 6) {
                    value = value.substring(0, 6);
                }
                
                // Adiciona os hífens automaticamente
                let formatted = '';
                for (let i = 0; i < value.length; i++) {
                    if (i === 2 || i === 4) {
                        formatted += '-';
                    }
                    formatted += value[i];
                }
                
                e.target.value = formatted;
                
                // Submeter quando tiver 6 caracteres ou estiver vazio
                if (value.length === 6 || value.length === 0) {
                    document.getElementById('filterForm').submit();
                }
            });
        }
    });

    // Função para limpar todos os filtros
    function clearFilters() {
        const dropdowns = document.querySelectorAll('.filter-dropdown');
        const telefoneInput = document.getElementById('telefoneInput');
        const matriculaInput = document.getElementById('matriculaInput');
        
        dropdowns.forEach(function(dropdown) {
            dropdown.value = '';
        });
        
        if (telefoneInput) telefoneInput.value = '';
        if (matriculaInput) matriculaInput.value = '';
        
        document.getElementById('filterForm').submit();
    }
</script>
