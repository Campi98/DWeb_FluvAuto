@model FluvAuto.Models.Funcionario

@{
    ViewData["Title"] = "Edit";
}

<h1>Editar funcionário</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Funcao" class="control-label"></label>
                <input asp-for="Funcao" class="form-control" />
                <span asp-validation-for="Funcao" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Fotografia (opcional)</label>
                <div class="photo-upload-container">
                    @if (!string.IsNullOrEmpty(Model.Fotografia))
                    {
                        <div id="currentPhotoContainer" style="margin-bottom: 10px;">
                            <img src="@Model.Fotografia" alt="Fotografia atual" style="max-width: 150px; max-height: 150px; border: 1px solid #ddd; border-radius: 4px;" />
                            <p style="font-size: 0.9em; color: #666;">Fotografia atual</p>
                            <div class="form-check" style="margin-top: 10px;">
                                <input type="checkbox" id="chkRemoverFoto" class="form-check-input" onchange="toggleRemoverFoto(this)" />
                                <input type="hidden" id="removerFotografiaAtual" name="removerFotografiaAtual" value="false" />
                                <label for="chkRemoverFoto" class="form-check-label text-danger">
                                    <i class="fas fa-trash"></i> Remover fotografia atual
                                </label>
                            </div>
                        </div>
                    }
                    <input type="file" id="fotografiaUpload" name="fotografiaUpload" accept="image/*" class="form-control" onchange="previewFotografia(this)" />
                    <small class="form-text text-muted">Máximo 500KB. Formatos aceites: JPG, PNG, GIF, BMP, WebP</small>
                    <div id="photoPreviewContainer" style="display: none; margin-top: 10px;">
                        <img id="photoPreview" src="" alt="Preview da nova fotografia" style="max-width: 150px; max-height: 150px; border: 1px solid #ddd; border-radius: 4px;" />
                        <button type="button" id="removePhotoBtn" onclick="removerFotografia()" style="display: block; margin-top: 5px; color: red; background: none; border: none; cursor: pointer;">✕ Remover nova foto</button>
                        <div id="fileInfo" style="font-size: 0.8em; color: #666; margin-top: 5px;"></div>
                    </div>
                </div>
            </div>
            <input type="hidden" asp-for="UtilizadorId" />
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Telefone" class="control-label"></label>
                <input asp-for="Telefone" class="form-control" />
                <span asp-validation-for="Telefone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Morada" class="control-label"></label>
                <input asp-for="Morada" class="form-control" />
                <span asp-validation-for="Morada" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CodPostal" class="control-label"></label>
                <input asp-for="CodPostal" class="form-control" />
                <span asp-validation-for="CodPostal" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Voltar à lista</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function previewFotografia(input) {
            const previewContainer = document.getElementById('photoPreviewContainer');
            const preview = document.getElementById('photoPreview');                    const removerCheckbox = document.getElementById('chkRemoverFoto');
            
            if (input.files && input.files[0]) {
                const file = input.files[0];
                
                // Validar tipo de arquivo
                if (!file.type.startsWith('image/')) {
                    alert('Por favor, selecione apenas arquivos de imagem.');
                    input.value = '';
                    return;
                }
                
                // Validar tamanho (500KB)
                if (file.size > 500 * 1024) {
                    alert('A imagem é muito grande. Por favor, selecione uma imagem menor que 500KB.');
                    input.value = '';
                    return;
                }
                
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    previewContainer.style.display = 'block';
                    
                    // Mostrar informações do arquivo
                    const fileInfo = document.getElementById('fileInfo');
                    const fileSizeKB = (file.size / 1024).toFixed(1);
                    fileInfo.textContent = `${file.name} (${fileSizeKB} KB)`;
                    
                    // Desmarcar o checkbox de remover a foto atual se uma nova foto for selecionada
                    const removerCheckbox = document.getElementById('chkRemoverFoto');
                    const hiddenField = document.getElementById('removerFotografiaAtual');
                    if (removerCheckbox && hiddenField) {
                        removerCheckbox.checked = false;
                        hiddenField.value = 'false';
                        toggleRemoverFoto(removerCheckbox);
                    }
                };
                reader.readAsDataURL(file);
            }
        }
        
        function removerFotografia() {
            document.getElementById('fotografiaUpload').value = '';
            document.getElementById('photoPreviewContainer').style.display = 'none';
            document.getElementById('photoPreview').src = '';
        }
        
        function toggleRemoverFoto(checkbox) {
            const currentPhotoContainer = document.getElementById('currentPhotoContainer');
            const uploadInput = document.getElementById('fotografiaUpload');
            const hiddenField = document.getElementById('removerFotografiaAtual');
            
            if (checkbox.checked) {
                // Atualizar o campo hidden
                hiddenField.value = 'true';
                
                // Marcar visualmente que a foto será removida
                currentPhotoContainer.style.opacity = '0.5';
                currentPhotoContainer.style.filter = 'grayscale(100%)';
                
                // Limpar qualquer nova foto selecionada
                uploadInput.value = '';
                document.getElementById('photoPreviewContainer').style.display = 'none';
                
                // Impedir o upload de nova foto temporariamente
                uploadInput.disabled = true;
            } else {
                // Atualizar o campo hidden
                hiddenField.value = 'false';
                
                // Restaurar aparência normal
                currentPhotoContainer.style.opacity = '1';
                currentPhotoContainer.style.filter = 'none';
                
                // Reativar o upload
                uploadInput.disabled = false;
            }
        }
    </script>
}
