@model IEnumerable<FluvAuto.Models.FuncionariosMarcacoes>

@{
    ViewData["Title"] = "Index";
    var isAdminOrFuncionario = User.IsInRole("admin") || User.IsInRole("funcionario");
    string? searchString = Context.Request.Query["searchString"].ToString();
    string? searchField = Context.Request.Query["searchField"].ToString();
}

<h1>Serviços</h1>

@if (isAdminOrFuncionario)
{
    <form method="get" class="mb-3">
        <div class="input-group">
            <select name="searchField" class="form-select" style="max-width: 180px;">
                <option value="nome" selected="@(searchField == null || searchField == "nome" ? "selected" : null)">Nome do Cliente</option>
                <option value="nome_funcionario" selected="@(searchField == "nome_funcionario" ? "selected" : null)">Nome do Funcionário</option>
                <option value="matricula" selected="@(searchField == "matricula" ? "selected" : null)">Matrícula</option>
                <option value="telefone" selected="@(searchField == "telefone" ? "selected" : null)">Telefone</option>
                <option value="servico" selected="@(searchField == "servico" ? "selected" : null)">Serviço</option>
            </select>
            <input type="text" name="searchString" value="@searchString" class="form-control" placeholder="Pesquisar..." />
            <button type="submit" class="btn btn-primary">Pesquisar</button>
        </div>
    </form>
    <p>
        <a asp-action="Create">Criar serviço</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.HorasGastas)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comentarios)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DataInicioServico)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Marcacao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Funcionario)
            </th>
            <th>
                Viatura
            </th>
            @if (isAdminOrFuncionario)
            {
                <th>Cliente</th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.HorasGastas)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comentarios)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataInicioServico)
                </td>
                <td>
                    @(item.Marcacao?.Servico ?? "-")
                </td>
                <td>
                    @(item.Funcionario?.Nome ?? "-")
                </td>
                <td>
                    @(item.Marcacao?.Viatura != null ? ($"{item.Marcacao.Viatura.Marca} - {item.Marcacao.Viatura.Modelo}") : "-")<br />
                    <span>@(item.Marcacao?.Viatura?.Matricula ?? "")</span>
                </td>
                @if (isAdminOrFuncionario)
                {
                    <td>
                        @Html.Raw((item.Marcacao?.Viatura?.Cliente?.Nome ?? "-") + "<br />" + (item.Marcacao?.Viatura?.Cliente?.Telefone ?? "-"))
                    </td>
                }
                <td>
                    @if (isAdminOrFuncionario)
                    {
                        @Html.ActionLink("Editar", "Edit", new { marcacaoId = item.MarcacaoFK, funcionarioId = item.FuncionarioFK })
                        @: |
                        @Html.ActionLink("Apagar", "Delete", new { marcacaoId = item.MarcacaoFK, funcionarioId = item.FuncionarioFK })
                        @: |
                    }
                    @Html.ActionLink("Detalhes", "Details", new { marcacaoId = item.MarcacaoFK, funcionarioId = item.FuncionarioFK })
                </td>
            </tr>
        }
    </tbody>
</table>
