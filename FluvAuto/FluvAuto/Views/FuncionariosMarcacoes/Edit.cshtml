@model FluvAuto.Models.FuncionariosMarcacoes

@{
    ViewData["Title"] = "Edit";
}

<h1>Editar serviço</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" asp-route-marcacaoId="@Model.MarcacaoFK" asp-route-funcionarioId="@Model.FuncionarioFK">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="HorasGastas" class="control-label"></label>
                <input asp-for="HorasGastas" class="form-control" />
                <span asp-validation-for="HorasGastas" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Comentarios" class="control-label"></label>
                <input asp-for="Comentarios" class="form-control" />
                <span asp-validation-for="Comentarios" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataInicioServico" class="control-label"></label>
                <input asp-for="DataInicioServico" class="form-control" />
                <span asp-validation-for="DataInicioServico" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Viatura</label>
                <input class="form-control"
                    value="@(Model.Marcacao?.Viatura != null ? ($"{Model.Marcacao.Viatura.Marca} {Model.Marcacao.Viatura.Modelo} - {Model.Marcacao.Viatura.Matricula}") : "-")"
                    readonly />
            </div>
            <input type="hidden" asp-for="MarcacaoFK" />
            <input type="hidden" asp-for="FuncionarioFK" />
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Voltar à lista</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}